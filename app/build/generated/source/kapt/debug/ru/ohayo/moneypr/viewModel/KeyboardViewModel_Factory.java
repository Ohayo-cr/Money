// Generated by Dagger (https://dagger.dev).
package ru.ohayo.moneypr.viewModel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.ohayo.moneypr.data.repository.ExpressionRepository;
import ru.ohayo.moneypr.ui.theme.screens.use_case.EvaluateExpressionUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class KeyboardViewModel_Factory implements Factory<KeyboardViewModel> {
  private final Provider<EvaluateExpressionUseCase> evaluateExpressionUseCaseProvider;

  private final Provider<ExpressionRepository> repositoryProvider;

  public KeyboardViewModel_Factory(
      Provider<EvaluateExpressionUseCase> evaluateExpressionUseCaseProvider,
      Provider<ExpressionRepository> repositoryProvider) {
    this.evaluateExpressionUseCaseProvider = evaluateExpressionUseCaseProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public KeyboardViewModel get() {
    return newInstance(evaluateExpressionUseCaseProvider.get(), repositoryProvider.get());
  }

  public static KeyboardViewModel_Factory create(
      Provider<EvaluateExpressionUseCase> evaluateExpressionUseCaseProvider,
      Provider<ExpressionRepository> repositoryProvider) {
    return new KeyboardViewModel_Factory(evaluateExpressionUseCaseProvider, repositoryProvider);
  }

  public static KeyboardViewModel newInstance(EvaluateExpressionUseCase evaluateExpressionUseCase,
      ExpressionRepository repository) {
    return new KeyboardViewModel(evaluateExpressionUseCase, repository);
  }
}

// Generated by Dagger (https://dagger.dev).
package ru.ohayo.moneypr.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.ohayo.moneypr.data.room.currency.CurrencyDao;
import ru.ohayo.moneypr.repository.CurrencyRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideCurrencyRepositoryFactory implements Factory<CurrencyRepository> {
  private final Provider<CurrencyDao> currencyDaoProvider;

  public AppModule_ProvideCurrencyRepositoryFactory(Provider<CurrencyDao> currencyDaoProvider) {
    this.currencyDaoProvider = currencyDaoProvider;
  }

  @Override
  public CurrencyRepository get() {
    return provideCurrencyRepository(currencyDaoProvider.get());
  }

  public static AppModule_ProvideCurrencyRepositoryFactory create(
      Provider<CurrencyDao> currencyDaoProvider) {
    return new AppModule_ProvideCurrencyRepositoryFactory(currencyDaoProvider);
  }

  public static CurrencyRepository provideCurrencyRepository(CurrencyDao currencyDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCurrencyRepository(currencyDao));
  }
}

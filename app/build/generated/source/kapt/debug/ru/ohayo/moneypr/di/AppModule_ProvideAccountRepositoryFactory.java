// Generated by Dagger (https://dagger.dev).
package ru.ohayo.moneypr.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.ohayo.moneypr.data.data_source.allDao.AccountDao;
import ru.ohayo.moneypr.data.repository.AccountRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideAccountRepositoryFactory implements Factory<AccountRepository> {
  private final Provider<AccountDao> accountDaoProvider;

  public AppModule_ProvideAccountRepositoryFactory(Provider<AccountDao> accountDaoProvider) {
    this.accountDaoProvider = accountDaoProvider;
  }

  @Override
  public AccountRepository get() {
    return provideAccountRepository(accountDaoProvider.get());
  }

  public static AppModule_ProvideAccountRepositoryFactory create(
      Provider<AccountDao> accountDaoProvider) {
    return new AppModule_ProvideAccountRepositoryFactory(accountDaoProvider);
  }

  public static AccountRepository provideAccountRepository(AccountDao accountDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAccountRepository(accountDao));
  }
}

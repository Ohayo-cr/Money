// Generated by Dagger (https://dagger.dev).
package ru.ohayo.moneypr.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ru.ohayo.moneypr.domain.calculator.ExpressionCalculator;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideEvaluateExpressionUseCaseFactory implements Factory<ExpressionCalculator> {
  @Override
  public ExpressionCalculator get() {
    return provideEvaluateExpressionUseCase();
  }

  public static AppModule_ProvideEvaluateExpressionUseCaseFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ExpressionCalculator provideEvaluateExpressionUseCase() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideEvaluateExpressionUseCase());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideEvaluateExpressionUseCaseFactory INSTANCE = new AppModule_ProvideEvaluateExpressionUseCaseFactory();
  }
}

// Generated by Dagger (https://dagger.dev).
package ru.ohayo.moneypr.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.ohayo.moneypr.data.room.AppDatabase;
import ru.ohayo.moneypr.data.room.account.AccountDao;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideAccountDaoFactory implements Factory<AccountDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public AppModule_ProvideAccountDaoFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public AccountDao get() {
    return provideAccountDao(appDatabaseProvider.get());
  }

  public static AppModule_ProvideAccountDaoFactory create(
      Provider<AppDatabase> appDatabaseProvider) {
    return new AppModule_ProvideAccountDaoFactory(appDatabaseProvider);
  }

  public static AccountDao provideAccountDao(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAccountDao(appDatabase));
  }
}
